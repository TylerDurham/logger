import { expect, jest, test, afterAll } from "@jest/globals";
import logger from '../src/logger';
import * as colors from 'ansi-colors';

function getRandomInt(min: number, max: number) {
    min = Math.ceil(min);
    max = Math.floor(max);
    return Math.floor(Math.random() * (max - min + 1)) + min;
}

const words_and_phrases:string[] = [
    'This',
    'is a',
    'test',
    'sentence.',
    'it can be used',
    'to',
    'test the styles',
    'of the',
    'logger',
    'output.',
    '\n\n',
    'It is to be',
    'used for',
    'testing',
    'purposes',
    'only.',
    'The quick', 'brown', 'fox', 'jumped over', 'the lazy dog.'
]



const random_quotes = () => {
    const input: string[] = [];
    const expectedOutput: string[] = [];
    for(let i = 0; i < words_and_phrases.length; i++) {
        const doQuote = (i === (getRandomInt(0, words_and_phrases.length)));
        if (doQuote) {
            const quote = (i % 2 === 0) ? `"` : `'`;
            input.push(`${quote}${words_and_phrases[i]}${quote}`);
            expectedOutput.push(colors.green(`${quote}${words_and_phrases[i]}${quote}`));
        } else {
            input.push(words_and_phrases[i]);
            expectedOutput.push(words_and_phrases[i]);
        }
    }

    return { input: input.join(' '), expectedOutput: expectedOutput.join(' ') }
}

const getExpectedPrefix = (prefix: string) => {
    return colors.bold.blue(prefix);
}

test("Tests setting the 'prefix' property via the constructor.", () => {
    const test_prefix = `[${Math.random().toString()}]`;
    const test_input = 'This is a test!';
    const log = logger(test_prefix);

    const spy = ((output: string) => {
        
        expect(log.prefix).toBe(test_prefix);
        expect(output).toContain(test_prefix);
        expect(output.startsWith(test_prefix));
        expect(output.split(' ')[0]).toEqual(getExpectedPrefix(test_prefix));
    });

    (log as any)._spy = spy;

    // @ts-ignore
    log.info(test_input);
    
});

test("Tests the styling of quotes.", () => {
    const test_prefix = `[${Math.random().toString()}]`;
    const log = logger(test_prefix);

    const { input, expectedOutput } = random_quotes();

    const spy = (output: string) => {
        expect(output).toEqual(getExpectedPrefix(test_prefix) + ' ' + expectedOutput);
    }

    log.info(input);

    //log.info(`I am Jack's medulla obglotta.`);
    //log.info(`I am Jack\\'s pen and Jack\\'s paper.`);
});